$webConfigPath = <Your web.config path here>
$configPath = (Get-Item -Path $webConfigPath).FullName
[xml]$urlRewriteSection = @"
<rewrite>
    <rules>
       <rule name="RedirectToHttps" stopProcessing="true">
          <match url="(.*)" ignoreCase="true" />
          <conditions>
            <add input="{HTTP_X_FORWARDED_PROTO}" pattern="^https$" ignoreCase="true" negate="true" />
            <add input="{REMOTE_HOST}" pattern="localhost" ignoreCase="true" negate="true" />
            <add input="{REMOTE_ADDR}" pattern="127.0.0.1" negate="true" />
            <add input="{HTTP_HOST}" pattern="localhost" ignoreCase="true" negate="true" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
        </rule>
    </rules>
</rewrite>
"@


Write-Verbose "Ammending $configPath"
[xml]$xml = [xml](Get-Content -Path $configPath)

Write-Verbose "Current Config:"
$sw = New-Object System.Io.Stringwriter
$writer=New-Object System.Xml.XmlTextWriter($sw)
$writer.Formatting = [System.Xml.Formatting]::Indented
$xml.WriteContentTo($writer)
$sw.ToString()


if($xml.SelectSingleNode("//configuration//system.webServer") -eq $null)
{
    [System.Xml.XmlElement]$missingElement = $xml.CreateElement("system.webServer")
    $xml.SelectSingleNode("//configuration").AppendChild($missingElement)
}
$xml.configuration["system.webServer"].AppendChild($xml.ImportNode($urlRewriteSection.rewrite, $true))
$xml.Save($configPath)

Write-Verbose "New web.config:"
$sw = New-Object System.Io.Stringwriter
$writer=New-Object System.Xml.XmlTextWriter($sw)
$writer.Formatting = [System.Xml.Formatting]::Indented
$xml.WriteContentTo($writer)
$sw.ToString()
