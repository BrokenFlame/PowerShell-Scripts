<#
   .Synopsis
      Backup Teamcity configuration, logs and so on using the TeamCity Rest API
   .DESCRIPTION
      Backup Teamcity configuration, logs and so on using the TeamCity Rest API
   .EXAMPLE
      Backup-Teamcity -ServerUrl "https://teamcity.mycompany.com" -Username BackupOperator -Password BackupOperatorPassword -Filename TeamCityBackupV1 -IncludeConfigs -IncludeDatabase -IncludeBuildLogs -IncludePersonalChanges
   #>
   function Backup-Teamcity
   {
       [CmdletBinding()]
       Param
       (
           # Param1 help description
           [Parameter(Mandatory=$true,
                      ValueFromPipelineByPropertyName=$true,
                      Position=0)]
            [string]$ServerUrl ="https://teamcity.mycompany.com",
            [string]$Username,
            [string]$Password,
            [string]$FileName = "TeamCity_Backup_" + (Get-Date -format "yyyyMMdd"),
            [switch]$AddTimestamp,
            [switch]$IncludeConfigs,
            [switch]$IncludeDatabase,
            [switch]$IncludeBuildLogs,
            [switch]$IncludePersonalChanges
       )
   
       Begin
       {
            $mUsername = $Username
            $mPassword = $Password

       }
       Process
       {
        try{
            $securePassword = ConvertTo-SecureString $mPassword -AsPlainText -Force
            $cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $mUsername, $securePassword        
            $mUrl = [System.String]::Format("{0}/httpAuth/app/rest/server/backup?addTimestamp={1}&includeConfigs={2}&includeDatabase={3}&includeBuildLogs={4}&includePersonalChanges={5}&fileName={6}",
                                            $ServerUrl,
                                            $AddTimestamp,
                                            $IncludeConfigs,
                                            $IncludeDatabase,
                                            $IncludeBuildLogs,
                                            $IncludePersonalChanges,
                                            $FileName);
            $result = Invoke-RestMethod -Method Post -Uri $mUrl -Credential $cred
            }
            catch
            {
                Return 1
            }
       }
   }

